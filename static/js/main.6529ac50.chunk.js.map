{"version":3,"sources":["Config/Sets.js","Config/CardTypes.js","Components/CardSearch/index.js","Components/Decker/index.js","Components/DeckDashboard/index.js","Components/Copyright/index.js","Components/ScrollTop/index.js","App/App.js","reportWebVitals.js","index.js"],"names":["Sets","key","value","CardTypes","useStyles","makeStyles","theme","container","height","boxShadow","formControl","margin","spacing","width","selectEmpty","marginTop","CardSearch","props","classes","openDialog","className","FormControl","InputLabel","id","Select","labelId","map","set","MenuItem","type","TextField","label","Button","variant","color","onClick","card","Decker","deckList","Grid","item","xs","sm","md","lg","src","DeckDashBoard","React","useState","open","setOpen","handleClose","Dialog","onClose","aria-labelledby","aria-describedby","DialogContent","align","fontSize","style","red","green","DialogActions","Copyright","Typography","Date","getFullYear","root","position","bottom","right","ScrollTop","children","window","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","Zoom","in","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","App","CssBaseline","AppBar","Toolbar","Container","maxWidth","Box","my","DeckDashboard","mt","Fab","size","aria-label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6529ac50.chunk.js","sourcesContent":["const Sets = [\r\n  {\r\n    key: 'All',\r\n    value: 'All',\r\n  },\r\n  {\r\n    key: '1A',\r\n    value: '1A',\r\n  },\r\n  {\r\n    key: '1B',\r\n    value: '1B',\r\n  },\r\n  {\r\n    key: '2A',\r\n    value: '2A',\r\n  },\r\n  {\r\n    key: '2B',\r\n    value: '2B',\r\n  },\r\n];\r\n\r\nexport default Sets;\r\n","const CardTypes = [\r\n  {\r\n    key: 'All',\r\n    value: 'All',\r\n  },\r\n  {\r\n    key: '寶可夢',\r\n    value: '寶可夢',\r\n  },\r\n  {\r\n    key: '訓練家',\r\n    value: '訓練家',\r\n  },\r\n  {\r\n    key: '物品',\r\n    value: '物品',\r\n  },\r\n  {\r\n    key: '能量',\r\n    value: '能量',\r\n  },\r\n];\r\n\r\nexport default CardTypes;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {\r\n  Sets,\r\n  CardTypes,\r\n} from '../../Config';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    height: '100%',\r\n    boxShadow: 'rgba(17, 17, 26, 0.05) 0px 1px 0px, rgba(17, 17, 26, 0.1) 0px 0px 8px',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: '95%',\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst CardSearch = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { openDialog } = props;\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">彈數</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          // value={age}\r\n          // onChange={handleChange}\r\n        >\r\n          {\r\n            Sets.map((set) => {\r\n              return (\r\n                <MenuItem value={set.value}>{set.key}</MenuItem>\r\n              );\r\n            })\r\n          }\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">種類</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          // value={age}\r\n          // onChange={handleChange}\r\n        >\r\n          {\r\n            CardTypes.map((type) => {\r\n              return (\r\n                <MenuItem value={type.value}>{type.key}</MenuItem>\r\n              );\r\n            })\r\n          }\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <TextField id=\"standard-basic\" label=\"關鍵字\" />\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={openDialog}>\r\n          查詢\r\n        </Button>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          清除條件\r\n        </Button>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardSearch;","import { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    // height: '100%',\r\n    // minHeight: '300px',\r\n    // display: 'flex',\r\n    // boxShadow: 'rgba(17, 17, 26, 0.05) 0px 1px 0px, rgba(17, 17, 26, 0.1) 0px 0px 8px',\r\n  },\r\n  card: {\r\n    // width: '100%',\r\n    // height: '200px',\r\n    boxShadow: 'rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px',\r\n  },\r\n}));\r\n\r\nconst Decker = (props) => {\r\n  const classes = useStyles();\r\n  const { deckList } = props;\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Grid container spacing={3}>\r\n        {\r\n          deckList.map((card) => {\r\n            return (\r\n              <Grid item xs={6} sm={4} md={3} lg={2}>\r\n                <div className={classes.card}>\r\n                  <img src=\"https://ptcgcard.com/img/173.cb2d1b04.jpg\" width=\"100%\" />\r\n                </div>\r\n              </Grid>\r\n            );\r\n          })\r\n        }\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Decker;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport { green, red } from '@material-ui/core/colors';\r\n\r\nimport CardSearch from '../CardSearch';\r\nimport Decker from '../Decker';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: '95%',\r\n  },\r\n}));\r\n\r\nconst DeckDashBoard = () => {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [deckList, setDeckList] = React.useState([\r\n    1, 2, 3, 4, 5, 6, 7, 8, 9 , 10,\r\n  ]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={4} md={3} lg={3}>\r\n          <CardSearch\r\n            openDialog={handleClickOpen}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={8} md={9} lg={9}>\r\n          <Decker\r\n            deckList={deckList}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        {/* <DialogTitle id=\"alert-dialog-title\">查詢結果</DialogTitle> */}\r\n        <DialogContent align=\"center\">\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value=\"1\"\r\n              // onChange={handleChange}\r\n            >\r\n              <MenuItem value=\"1\">噴火龍</MenuItem>\r\n              <MenuItem value=\"2\">水劍龜</MenuItem>\r\n              <MenuItem value=\"3\">妙娃花</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <div>\r\n            <RemoveCircleIcon fontSize=\"large\" style={{ color: red[500] }}/>\r\n            <AddCircleIcon fontSize=\"large\" style={{ color: green[500] }} />\r\n          </div>\r\n          <ChevronLeftIcon fontSize=\"large\" />\r\n          <img src=\"https://ptcgcard.com/img/173.cb2d1b04.jpg\" width=\"70%\" />\r\n          <ChevronRightIcon fontSize=\"large\" />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            關閉\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeckDashBoard;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\n/**\r\n * Copyright\r\n *\r\n */\r\nconst Copyright = () => {\r\n  return (\r\n    <Typography\r\n      variant=\"body2\"\r\n      // color=\"initial\"\r\n      align=\"center\"\r\n      style={{ height: '50px', color: '#000000' }}\r\n    >\r\n      { `${new Date().getFullYear() } © ` }\r\n      { `Aaron All Right Reserved.` }\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default Copyright;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst ScrollTop = (props) => {\r\n  const { children, window } = props;\r\n  const classes = useStyles();\r\n  // Note that you normally won't need to set the window ref as useScrollTrigger\r\n  // will default to window.\r\n  // This is only being set here because the demo is in an iframe.\r\n  const trigger = useScrollTrigger({\r\n    target: window ? window() : undefined,\r\n    disableHysteresis: true,\r\n    threshold: 100,\r\n  });\r\n\r\n  const handleClick = (event) => {\r\n    const anchor = (event.target.ownerDocument || document).querySelector('#back-to-top-anchor');\r\n\r\n    if (anchor) {\r\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Zoom in={trigger}>\r\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\r\n        {children}\r\n      </div>\r\n    </Zoom>\r\n  );\r\n}\r\n\r\nScrollTop.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default ScrollTop;\r\n","import AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport Box from '@material-ui/core/Box';\nimport Fab from '@material-ui/core/Fab';\n\nimport DeckDashboard from '../Components/DeckDashboard';\nimport Copyright from '../Components/Copyright';\nimport ScrollTop from '../Components/ScrollTop';\n\nimport './App.css';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst App = (props) => {\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n      <AppBar>\n        <Toolbar>\n          <Typography variant=\"h6\">Aaron Test</Typography>\n        </Toolbar>\n      </AppBar>\n      <Toolbar id=\"back-to-top-anchor\" />\n      <Container maxWidth={false}>\n        <Box my={2}>\n          <DeckDashboard />\n        </Box>\n      </Container>\n      <Box mt={8}>\n          <Copyright />\n        </Box>\n      <ScrollTop {...props}>\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </ScrollTop>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}