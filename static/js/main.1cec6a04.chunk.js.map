{"version":3,"sources":["Config/Sets.js","Config/CardTypes.js","Components/CardSearch/index.js","Components/ToolBar/index.js","Components/Decker/index.js","CardList/ac2a.js","CardList/as5a.js","CardList/as6a.js","CardList/as6b.js","CardList/sc2a.js","CardList/index.js","Components/DeckDashboard/index.js","Components/Copyright/index.js","Components/ScrollTop/index.js","App/App.js","reportWebVitals.js","index.js"],"names":["Sets","AC1A","key","value","text","AC1B","AC2A","AC2B","AS5A","AS5B","AS6A","AS6B","SC1A","SC1B","SC2A","SC2B","S4","S4A","CardTypes","POKEMON","sort","TRAINER","ITEM","STADIUM","ENERGY","useStyles","makeStyles","theme","container","height","boxShadow","formControl","margin","spacing","width","selectEmpty","marginTop","CardSearch","props","classes","handelSearch","queryCondition","handleChangeQuery","clearQuery","set","type","searchText","className","FormControl","InputLabel","id","Select","labelId","onChange","e","target","MenuItem","Object","keys","map","TextField","label","Button","variant","color","onClick","marginBottom","ToolBar","React","forwardRef","ref","useState","open","setOpen","handleClearDecker","handleClose","startIcon","exportComponentAsJPEG","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Alert","elevation","card","padding","deckInfo","backgroundColor","pokemonInfo","trainerInfo","itemInfo","stadiumInfo","energyInfo","contentText","marginLeft","Decker","deckList","useMemo","pokemonCount","trainerCount","itemCount","stadiumConut","energyCount","forEach","total","length","generateDeckList","Typography","align","sortDeck","a","b","aSort","find","bSort","cardCount","tmpIndex","some","tmp","index","push","Grid","item","xs","sm","md","lg","src","imgSrc","severity","AC2A_Card_List","name","maxCount","isBan","AS5A_Card_List","AS6A_Card_List","AS6B_Card_List","SC2A_Card_List","CARD_LIST","cardContainer","display","justifyContent","alignItems","content","StyledSelect","withStyles","select","paddingRight","Transition","Slide","direction","DeckDashBoard","exportRef","useRef","setQueryCondition","selectCard","setSelectCard","setDeckList","toogleDialog","getDeckList","filter","tmp1","tmp2","tmp3","search","couldClickPrev","couldClickNext","getCardCount","tmpCard","undefined","couldClickAdd","getSameNameCardCount","couldClickRemove","getUsedCard","fullScreen","TransitionComponent","IconButton","aria-label","size","disabled","removeIndex","newDeckList","fontSize","style","red","green","selectCardIndex","blueGrey","Copyright","Date","getFullYear","root","position","bottom","right","ScrollTop","children","window","trigger","useScrollTrigger","disableHysteresis","threshold","Zoom","in","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","App","CssBaseline","AppBar","Toolbar","Container","maxWidth","Box","my","DeckDashboard","mt","Fab","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1cec6a04.chunk.js","sourcesContent":["/**\r\n * Sets\r\n *\r\n */\r\nconst Sets = {\r\n  AC1A: {\r\n    key: 'ac1a',\r\n    value: 'ac1a',\r\n    text: '眾星雲集組合篇 A',\r\n  },\r\n  AC1B: {\r\n    key: 'ac1b',\r\n    value: 'ac1b',\r\n    text: '眾星雲集組合篇 B',\r\n  },\r\n  AC2A: {\r\n    key: 'ac2a',\r\n    value: 'ac2a',\r\n    text: '美夢成真組合篇 A',\r\n  },\r\n  AC2B: {\r\n    key: 'ac2b',\r\n    value: 'ac2b',\r\n    text: '美夢成真組合篇 B',\r\n  },\r\n  AS5A: {\r\n    key: 'as5a',\r\n    value: 'as5a',\r\n    text: '雙倍爆擊 A',\r\n  },\r\n  AS5B: {\r\n    key: 'as5b',\r\n    value: 'as5b',\r\n    text: '雙倍爆擊 B',\r\n  },\r\n  AS6A: {\r\n    key: 'as6a',\r\n    value: 'as6a',\r\n    text: '傳說交鋒 A',\r\n  },\r\n  AS6B: {\r\n    key: 'as6b',\r\n    value: 'as6b',\r\n    text: '傳說交鋒 B',\r\n  },\r\n  SC1A: {\r\n    key: 'sc1a',\r\n    value: 'sc1a',\r\n    text: '劍&盾 A',\r\n  },\r\n  SC1B: {\r\n    key: 'sc1b',\r\n    value: 'sc1b',\r\n    text: '劍&盾 B',\r\n  },\r\n  SC2A: {\r\n    key: 'sc2a',\r\n    value: 'sc2a',\r\n    text: '無極力量 A',\r\n  },\r\n  SC2B: {\r\n    key: 'sc2b',\r\n    value: 'sc2b',\r\n    text: '無極力量 B',\r\n  },\r\n  S4: {\r\n    key: 's4',\r\n    value: 's4',\r\n    text: '驚天伏特攻擊',\r\n  },\r\n  S4A: {\r\n    key: 's4a',\r\n    value: 's4a',\r\n    text: '閃色明星V',\r\n  },\r\n};\r\n\r\nexport default Sets;\r\n","const CardTypes = {\r\n  POKEMON: {\r\n    key: 'pokemon',\r\n    value: 'pokemon',\r\n    text: '寶可夢',\r\n    sort: 1,\r\n  },\r\n  TRAINER: {\r\n    key: 'trainer',\r\n    value: 'trainer',\r\n    text: '支援者',\r\n    sort: 2,\r\n  },\r\n  ITEM: {\r\n    key: 'item',\r\n    value: 'item',\r\n    text: '物品',\r\n    sort: 3,\r\n  },\r\n  STADIUM: {\r\n    key: 'stadium',\r\n    value: 'stadium',\r\n    text: '競技場',\r\n    sort: 4,\r\n  },\r\n  ENERGY: {\r\n    key: 'energy',\r\n    value: 'energy',\r\n    text: '能量',\r\n    sort: 5,\r\n  },\r\n};\r\n\r\nexport default CardTypes;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {\r\n  Sets,\r\n  CardTypes,\r\n} from '../../Config';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    height: '300px',\r\n    boxShadow: 'rgba(17, 17, 26, 0.05) 0px 1px 0px, rgba(17, 17, 26, 0.1) 0px 0px 8px',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: '95%',\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst CardSearch = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    handelSearch, // 查詢\r\n    queryCondition, // 搜尋條件\r\n    handleChangeQuery, // 修改條件\r\n    clearQuery, // 清空查詢條件\r\n  } = props;\r\n\r\n  const {\r\n    set, // 彈數\r\n    type, // 種類\r\n    searchText, // 關鍵字\r\n  } = queryCondition;\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">彈數</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={set}\r\n          onChange={(e) => {\r\n            handleChangeQuery('set', e.target.value);\r\n          }}\r\n        >\r\n          <MenuItem value=\"\">全部</MenuItem>\r\n          {\r\n            Object.keys(Sets).map((set) => {\r\n              return (\r\n                <MenuItem key={Sets[set].key} value={Sets[set].value}>{`${Sets[set].key} - ${Sets[set].text}`}</MenuItem>\r\n              );\r\n            })\r\n          }\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">種類</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={type}\r\n          onChange={(e) => {\r\n            handleChangeQuery('type', e.target.value);\r\n          }}\r\n        >\r\n          <MenuItem value=\"\">全部</MenuItem>\r\n          {\r\n            Object.keys(CardTypes).map((type) => {\r\n              return (\r\n                <MenuItem key={CardTypes[type].key} value={CardTypes[type].value}>{CardTypes[type].text}</MenuItem>\r\n              );\r\n            })\r\n          }\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"關鍵字\"\r\n          value={searchText}\r\n          onChange={(e) => {\r\n            handleChangeQuery('searchText', e.target.value);\r\n          }}\r\n        />\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handelSearch}>\r\n          查詢\r\n        </Button>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={clearQuery}>\r\n          清除條件\r\n        </Button>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardSearch;","import React from 'react';\r\nimport {\r\n  exportComponentAsJPEG,\r\n} from 'react-component-export-image';\r\nimport {\r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\n/**\r\n * useStyles\r\n *\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    marginTop: '10px',\r\n    marginBottom: '10px',\r\n    height: '160px',\r\n    boxShadow: 'rgba(17, 17, 26, 0.05) 0px 1px 0px, rgba(17, 17, 26, 0.1) 0px 0px 8px',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: '95%',\r\n  },\r\n}));\r\n\r\n/**\r\n * ToolBar\r\n *\r\n */\r\nconst ToolBar = React.forwardRef((props, ref) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const {\r\n    handleClearDecker,\r\n  } = props;\r\n\r\n  /**\r\n   * handleClickOpen\r\n   *\r\n   */\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  /**\r\n   * handleClose\r\n   *\r\n   */\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  /**\r\n   * handleConfirm\r\n   * 確認\r\n   *\r\n   */\r\n  const handleConfirm = () => {\r\n    handleClearDecker();\r\n    handleClose();\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <FormControl className={classes.formControl}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"default\"\r\n          startIcon={<DeleteIcon />}\r\n          onClick={handleClickOpen}\r\n        >\r\n          清空卡表\r\n        </Button>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"default\"\r\n          startIcon={<ShareIcon />}\r\n        >\r\n          分享連結\r\n        </Button>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"default\"\r\n          startIcon={<GetAppIcon />}\r\n          onClick={() => exportComponentAsJPEG(ref)}\r\n        >\r\n          下載卡表\r\n        </Button>\r\n      </FormControl>\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">警告</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            是否要清空卡表?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={handleClose}\r\n            // color=\"primary\"\r\n            variant=\"contained\"\r\n            startIcon={<ClearIcon />}\r\n          >\r\n            取消\r\n          </Button>\r\n          <Button\r\n            onClick={handleConfirm}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            startIcon={<CheckIcon />}\r\n          >\r\n            確認\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ToolBar;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport {\r\n  CardTypes,\r\n} from '../../Config';\r\n\r\nconst Alert = (props) => {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    // height: '100%',\r\n    // minHeight: '300px',\r\n    // display: 'flex',\r\n    // boxShadow: 'rgba(17, 17, 26, 0.05) 0px 1px 0px, rgba(17, 17, 26, 0.1) 0px 0px 8px',\r\n  },\r\n  card: {\r\n    // width: '100%',\r\n    // height: '200px',\r\n    // boxShadow: 'rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px',\r\n    padding: '5px',\r\n    boxShadow: 'rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px',\r\n  },\r\n  deckInfo: {\r\n    backgroundColor: '#f44336',\r\n  },\r\n  pokemonInfo: {\r\n    backgroundColor: '#9c27b0',\r\n  },\r\n  trainerInfo: {\r\n    backgroundColor: '#ff9800',\r\n  },\r\n  itemInfo: {\r\n    backgroundColor: '#2196f3',\r\n  },\r\n  stadiumInfo: {\r\n    backgroundColor: '#4F9D9D',\r\n  },\r\n  energyInfo: {\r\n    backgroundColor: '#4caf50',\r\n  },\r\n  contentText: {\r\n    marginTop: '20px',\r\n    marginLeft: '10px',\r\n  },\r\n}));\r\n\r\n/**\r\n * Decker\r\n *\r\n * @param {*} props\r\n */\r\nconst Decker = React.forwardRef((props, ref) => {\r\n  const classes = useStyles();\r\n  const {\r\n    deckList,\r\n  } = props;\r\n\r\n  /**\r\n   * deckInfo\r\n   * 牌組資訊\r\n   *\r\n   */\r\n  const deckInfo = React.useMemo(() => {\r\n    let pokemonCount = 0;\r\n    let trainerCount = 0;\r\n    let itemCount = 0;\r\n    let stadiumConut = 0;\r\n    let energyCount = 0;\r\n\r\n    deckList.forEach(card => {\r\n      switch (card.type) {\r\n        case CardTypes.POKEMON.value:\r\n          pokemonCount += 1;\r\n          break;\r\n        case CardTypes.TRAINER.value:\r\n          trainerCount += 1;\r\n          break;\r\n        case CardTypes.ITEM.value:\r\n          itemCount += 1;\r\n          break;\r\n        case CardTypes.STADIUM.value:\r\n          stadiumConut += 1;\r\n          break;\r\n        case CardTypes.ENERGY.value:\r\n          energyCount += 1;\r\n          break;\r\n        default:\r\n      }\r\n    });\r\n\r\n    return {\r\n      total: deckList.length,\r\n      pokemonCount,\r\n      trainerCount,\r\n      itemCount,\r\n      stadiumConut,\r\n      energyCount,\r\n    };\r\n  }, [deckList]);\r\n\r\n  /**\r\n   * generateDeckList\r\n   */\r\n  const generateDeckList = React.useMemo(() => {\r\n    if (deckList.length === 0) {\r\n      return (\r\n        <>\r\n          <Typography\r\n            variant=\"h5\"\r\n            color=\"secondary\"\r\n            align=\"center\"\r\n            // style={{ height: '50px', color: '#000000' }}\r\n            className={classes.contentText}\r\n          >\r\n            { `目前牌組沒有卡片。` }\r\n          </Typography>\r\n        </>\r\n      )\r\n    } else {\r\n      // 先重新排序所有卡片\r\n      const sortDeck = deckList.sort((a, b) => {\r\n        // 取得 a, b 的排序順序\r\n        const aSort = Object.keys(CardTypes).find((type) => { return CardTypes[type].value === a.type; });\r\n        const bSort = Object.keys(CardTypes).find((type) => { return CardTypes[type].value === b.type; });\r\n\r\n        return CardTypes[aSort].sort > CardTypes[bSort].sort ? 1 : -1;\r\n      });\r\n\r\n      // 處理相同卡片要放一起\r\n      const cardCount = [];\r\n      sortDeck.forEach((card) => {\r\n        // 判斷卡片是否已在陣列中\r\n        let tmpIndex = null;\r\n        const isExist = cardCount.some((tmp, index) => {\r\n          if (tmp.set === card.set && tmp.id === card.id) {\r\n            tmpIndex = index;\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        });\r\n\r\n        if (isExist) {\r\n          cardCount[tmpIndex].total += 1;\r\n        } else {\r\n          cardCount.push({\r\n            ...card,\r\n            total: 1,\r\n          });\r\n        }\r\n      });\r\n\r\n      return (\r\n        cardCount.map((card) => {\r\n          return (\r\n            <Grid item xs={6} sm={4} md={3} lg={2}>\r\n              <div className={classes.card}>\r\n                <img src={card.imgSrc} width=\"100%\" />\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  color=\"textPrimary\"\r\n                  align=\"center\"\r\n                >\r\n                  {card.total }\r\n                </Typography>\r\n              </div>\r\n            </Grid>\r\n          );\r\n        })\r\n      )\r\n    }\r\n  }, [deckList]);\r\n\r\n  return (\r\n    <div className={classes.container} ref={ref}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6} sm={6} md={4} lg={2}><Alert severity=\"info\" className={classes.deckInfo}>{`總數: ${deckInfo.total}`}</Alert></Grid>\r\n        <Grid item xs={6} sm={6} md={4} lg={2}><Alert severity=\"info\" className={classes.pokemonInfo}>{`寶可夢: ${deckInfo.pokemonCount}`}</Alert></Grid>\r\n        <Grid item xs={6} sm={6} md={4} lg={2}><Alert severity=\"info\" className={classes.trainerInfo}>{`訓練家: ${deckInfo.trainerCount}`}</Alert></Grid>\r\n        <Grid item xs={6} sm={6} md={4} lg={2}><Alert severity=\"info\" className={classes.itemInfo}>{`物品: ${deckInfo.itemCount}`}</Alert></Grid>\r\n        <Grid item xs={6} sm={6} md={4} lg={2}><Alert severity=\"info\" className={classes.stadiumInfo}>{`競技場: ${deckInfo.stadiumConut}`}</Alert></Grid>\r\n        <Grid item xs={6} sm={6} md={4} lg={2}><Alert severity=\"info\" className={classes.energyInfo}>{`能量: ${deckInfo.energyCount}`}</Alert></Grid>\r\n      </Grid>\r\n      <Grid container spacing={3}>\r\n        {\r\n          generateDeckList\r\n        }\r\n      </Grid>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Decker;","import {\r\n  CardTypes,\r\n  Sets,\r\n} from '../Config';\r\n\r\nconst set = Sets.AC2A.value;\r\n\r\n/**\r\n * AC2A_Card_List\r\n * 美夢成真組合篇 A\r\n *\r\n */\r\nconst AC2A_Card_List = [\r\n  {\r\n    id: 57,\r\n    name: '亞克諾姆',\r\n    set,\r\n    type: CardTypes.POKEMON.value,\r\n    maxCount: 4,\r\n    isBan: false,\r\n    imgSrc: 'https://ptcgcard.com/img/057.5aae84da.jpg',\r\n  },\r\n  {\r\n    id: 145,\r\n    name: '百變怪◇',\r\n    set,\r\n    type: CardTypes.POKEMON.value,\r\n    maxCount: 1,\r\n    isBan: false,\r\n    imgSrc: 'https://ptcgcard.com/img/145.939adcee.jpg',\r\n  },\r\n];\r\n\r\nexport default AC2A_Card_List;\r\n","import {\r\n  CardTypes,\r\n  Sets,\r\n} from '../Config';\r\n\r\nconst set = Sets.AS5A.value;\r\n\r\n/**\r\n * AS5A_Card_List\r\n * 雙倍爆擊 A\r\n *\r\n */\r\nconst AS5A_Card_List = [\r\n  {\r\n    id: 173,\r\n    name: '無人發電廠',\r\n    set,\r\n    type: CardTypes.STADIUM.value,\r\n    maxCount: 4,\r\n    isBan: false,\r\n    imgSrc: 'https://ptcgcard.com/img/173.a7b50657.jpg',\r\n  },\r\n];\r\n\r\nexport default AS5A_Card_List;\r\n","import {\r\n  CardTypes,\r\n  Sets,\r\n} from '../Config';\r\n\r\nconst set = Sets.AS6A.value;\r\n\r\n/**\r\n * AS6A_Card_List\r\n * 傳說交鋒 A\r\n *\r\n */\r\nconst AS6A_Card_List = [\r\n  {\r\n    id: 167,\r\n    name: '貴重球',\r\n    set,\r\n    type: CardTypes.ITEM.value,\r\n    maxCount: 4,\r\n    isBan: false,\r\n    imgSrc: 'https://ptcgcard.com/img/167.e09bac49.jpg',\r\n  },\r\n  {\r\n    id: 190,\r\n    name: '貴重球',\r\n    set,\r\n    type: CardTypes.ITEM.value,\r\n    maxCount: 4,\r\n    isBan: false,\r\n    imgSrc: 'https://ptcgcard.com/img/190.4630a317.jpg',\r\n  },\r\n];\r\n\r\nexport default AS6A_Card_List;\r\n","import {\r\n  CardTypes,\r\n  Sets,\r\n} from '../Config';\r\n\r\nconst set = Sets.AS6B.value;\r\n\r\n/**\r\n * AS6B_Card_List\r\n * 傳說交鋒 B\r\n *\r\n */\r\nconst AS6B_Card_List = [\r\n  {\r\n    id: 174,\r\n    name: 'N的覺悟',\r\n    set,\r\n    type: CardTypes.TRAINER.value,\r\n    maxCount: 4,\r\n    isBan: false,\r\n    imgSrc: 'https://ptcgcard.com/img/174.ce30c82b.jpg',\r\n  },\r\n  {\r\n    id: 222,\r\n    name: 'N的覺悟',\r\n    set,\r\n    type: CardTypes.TRAINER.value,\r\n    maxCount: 4,\r\n    isBan: false,\r\n    imgSrc: 'https://ptcgcard.com/img/222.e943d711.jpg',\r\n  },\r\n];\r\n\r\nexport default AS6B_Card_List;\r\n","import {\r\n  CardTypes,\r\n  Sets,\r\n} from '../Config';\r\n\r\nconst set = Sets.SC2A.value;\r\n\r\n/**\r\n * SC2A_Card_List\r\n * 無極力量 A\r\n *\r\n */\r\nconst SC2A_Card_List = [\r\n  {\r\n    id: 119,\r\n    name: '無極汰那V',\r\n    set,\r\n    type: CardTypes.POKEMON.value,\r\n    maxCount: 4,\r\n    isBan: false,\r\n    imgSrc: 'https://ptcgcard.com/img/119.21e44c49.jpg',\r\n  },\r\n  {\r\n    id: 153,\r\n    name: '無極汰那V',\r\n    set,\r\n    type: CardTypes.POKEMON.value,\r\n    maxCount: 4,\r\n    isBan: false,\r\n    imgSrc: 'https://ptcgcard.com/img/153.d0c13031.jpg',\r\n  },\r\n];\r\n\r\nexport default SC2A_Card_List;\r\n","import AC2A_Card_List from './ac2a';\r\nimport AS5A_Card_List from './as5a';\r\nimport AS6A_Card_List from './as6a';\r\nimport AS6B_Card_List from './as6b';\r\n\r\nimport SC2A_Card_List from './sc2a';\r\n\r\nconst CARD_LIST = [\r\n  ...AC2A_Card_List,\r\n  ...AS5A_Card_List,\r\n  ...AS6A_Card_List,\r\n  ...AS6B_Card_List,\r\n  ...SC2A_Card_List,\r\n];\r\n\r\nexport default CARD_LIST;\r\n","import React from 'react';\r\nimport {\r\n  makeStyles,\r\n  withStyles,\r\n} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n// import DialogContentText from '@material-ui/core/DialogContentText';\r\n// import DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport { green, red, blueGrey } from '@material-ui/core/colors';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CardSearch from '../CardSearch';\r\nimport ToolBar from '../ToolBar';\r\nimport Decker from '../Decker';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport CARD_LIST from '../../CardList';\r\n\r\n/**\r\n * useStyles\r\n *\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: '95%',\r\n  },\r\n  cardContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  content: {\r\n    padding: '0px',\r\n  },\r\n  cardCount: {\r\n    // fontSize: '24px',\r\n  },\r\n}));\r\n\r\n/**\r\n * StyledSelect\r\n *\r\n */\r\nconst StyledSelect = withStyles({\r\n  select: {\r\n    \"&.MuiSelect-select\": {\r\n      paddingRight: '0px',\r\n    },\r\n  },\r\n})(Select);\r\n\r\n/**\r\n * Transition\r\n *\r\n */\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n/**\r\n * DeckDashBoard\r\n *\r\n */\r\nconst DeckDashBoard = () => {\r\n  const classes = useStyles();\r\n  const exportRef = React.useRef();\r\n\r\n  // 查詢條件\r\n  const [queryCondition, setQueryCondition] = React.useState({\r\n    set: '', // 彈數\r\n    type: '', // 種類\r\n    searchText: '', // 關鍵字\r\n  });\r\n\r\n  const [selectCard, setSelectCard] = React.useState(null);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [deckList, setDeckList] = React.useState([]);\r\n\r\n  /**\r\n   * toogleDialog\r\n   *\r\n   */\r\n  const toogleDialog = () => {\r\n    // 如果關閉 Dialog，要清空選擇的卡片\r\n    if (open) {\r\n      setSelectCard(null);\r\n    }\r\n    setOpen(!open);\r\n  };\r\n\r\n  /**\r\n   * handleChangeQuery\r\n   * 更新查詢條件\r\n   *\r\n   * @param {*} key\r\n   * @param {*} value\r\n   */\r\n  const handleChangeQuery = (key, value) => {\r\n    setQueryCondition({\r\n      ...queryCondition,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * clearQuery\r\n   * 清空所有查詢條件\r\n   *\r\n   */\r\n  const clearQuery = () => {\r\n    setQueryCondition({\r\n      set: '', // 彈數\r\n      type: '', // 種類\r\n      searchText: '', // 關鍵字\r\n    });\r\n  };\r\n\r\n  /**\r\n   * getDeckList\r\n   * 根據搜尋條件 filter 卡片\r\n   *\r\n   */\r\n  const getDeckList = React.useMemo(() => {\r\n    return CARD_LIST.filter((tmp1) => {\r\n      // 過濾彈數\r\n      if (queryCondition.set === '') {\r\n        return true;\r\n      } else {\r\n        return tmp1.set === queryCondition.set;\r\n      }\r\n    }).filter((tmp2) => {\r\n      // 過濾卡片 type\r\n      if (queryCondition.type === '') {\r\n        return true;\r\n      } else {\r\n        return tmp2.type === queryCondition.type;\r\n      }\r\n    }).filter((tmp3) => {\r\n      // 過濾關鍵字\r\n      return tmp3.name.search(queryCondition.searchText) !== -1;\r\n    });\r\n  }, [queryCondition]);\r\n\r\n  /**\r\n   * handelSearch\r\n   * 查詢\r\n   *\r\n   */\r\n  const handelSearch = () => {\r\n    // 打開 Dialog 預設帶第一張卡片\r\n    if (selectCard === null) {\r\n      if (getDeckList.length > 0) {\r\n        setSelectCard(getDeckList[0]);\r\n      }\r\n    }\r\n    toogleDialog();\r\n  };\r\n\r\n  /**\r\n   * couldClickPrev\r\n   * 是否可以點選前一張\r\n   *\r\n   */\r\n  const couldClickPrev = React.useMemo(() => {\r\n    if (selectCard === null || getDeckList.length === 0) {\r\n      return true;\r\n    } else if (selectCard.set === getDeckList[0].set && selectCard.id === getDeckList[0].id) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }, [selectCard, getDeckList]);\r\n\r\n  /**\r\n   * couldClickNext\r\n   * 是否可以點選後一張\r\n   *\r\n   */\r\n  const couldClickNext = React.useMemo(() => {\r\n    if (selectCard === null || getDeckList.length === 0) {\r\n      return true;\r\n    } else if (selectCard.set === getDeckList[getDeckList.length -1].set && selectCard.id === getDeckList[getDeckList.length -1].id) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }, [selectCard, getDeckList]);\r\n\r\n  /**\r\n   * handlePrevCard\r\n   * 往前一張卡片\r\n   *\r\n   */\r\n  const handlePrevCard = () => {\r\n    // 取得目前是第幾張\r\n    let selectCardIndex = 0;\r\n    getDeckList.some((tmp, index) => {\r\n      if (tmp.id === selectCard.id && tmp.set === selectCard.set) {\r\n        selectCardIndex = index;\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n\r\n    if (selectCardIndex > 0) {\r\n      setSelectCard(getDeckList[selectCardIndex - 1]);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * handleNextCard\r\n   * 往後一張卡片\r\n   *\r\n   */\r\n  const handleNextCard = () => {\r\n    // 取得目前是第幾張\r\n    let selectCardIndex = 0;\r\n    getDeckList.some((tmp, index) => {\r\n      if (tmp.id === selectCard.id && tmp.set === selectCard.set) {\r\n        selectCardIndex = index;\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n\r\n    if (selectCardIndex !== getDeckList.length - 1) {\r\n      setSelectCard(getDeckList[selectCardIndex + 1]);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * handleAdd\r\n   * 加入卡片\r\n   *\r\n   */\r\n  const handleAdd = () => {\r\n    setDeckList([\r\n      ...deckList,\r\n      selectCard,\r\n    ]);\r\n  };\r\n\r\n  /**\r\n   * handleRemove\r\n   * 移除卡片\r\n   *\r\n   */\r\n  const handleRemove = () => {\r\n    // 取得要移除的 index\r\n    let removeIndex = -1;\r\n    deckList.forEach((card, index) => {\r\n      if (selectCard !== null && selectCard.set === card.set && selectCard.id === card.id) {\r\n        removeIndex = index;\r\n      }\r\n    });\r\n\r\n    if (removeIndex > -1) {\r\n      const newDeckList = deckList.filter((card, index) => {\r\n        return index !== removeIndex;\r\n      });\r\n      setDeckList(newDeckList);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * getCardCount\r\n   * 取得已使用卡片的張數\r\n   *\r\n   */\r\n  const getCardCount = () => {\r\n    let returnCount = 0;\r\n\r\n    if (selectCard !== null && deckList.length > 0) {\r\n      const tmpCard = deckList.filter((tmp) => tmp.set === selectCard.set && tmp.id === selectCard.id);\r\n      // const tmpCard = deckList.filter((tmp) => tmp.name === selectCard.name);\r\n      if (tmpCard !== undefined) {\r\n        return tmpCard.length;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * getSameNameCardCount\r\n   * 取得同名卡的張數\r\n   *\r\n   */\r\n  const getSameNameCardCount = () => {\r\n    let returnCount = 0;\r\n\r\n    if (selectCard !== null && deckList.length > 0) {\r\n      const tmpCard = deckList.filter((tmp) => tmp.name === selectCard.name);\r\n      if (tmpCard !== undefined) {\r\n        return tmpCard.length;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * couldClickAdd\r\n   * 是否可以點選加入\r\n   *\r\n   */\r\n  const couldClickAdd = React.useMemo(() => {\r\n    // 牌組只能 60 張\r\n    if (deckList.length === 60) {\r\n      return true;\r\n    } else if (selectCard !== null && selectCard.maxCount === getSameNameCardCount()) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }, [deckList, selectCard]);\r\n\r\n  /**\r\n   * couldClickRemove\r\n   * 是否可以點選移除\r\n   *\r\n   */\r\n  const couldClickRemove = React.useMemo(() => {\r\n    if (getCardCount() === 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }, [deckList]);\r\n\r\n  /**\r\n   * handleClearDecker\r\n   * 清空卡表\r\n   *\r\n   */\r\n  const handleClearDecker = () => {\r\n    setDeckList([]);\r\n  };\r\n\r\n  /**\r\n   * getUsedCard\r\n   * 取得已使用卡片的張數\r\n   *\r\n   */\r\n  const getUsedCard = React.useMemo(() => {\r\n    return getCardCount();\r\n  }, [selectCard, deckList]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={4} md={3} lg={3}>\r\n          <CardSearch\r\n            handelSearch={handelSearch}\r\n            queryCondition={queryCondition}\r\n            handleChangeQuery={handleChangeQuery}\r\n            clearQuery={clearQuery}\r\n          />\r\n          <ToolBar\r\n            ref={exportRef}\r\n            handleClearDecker={handleClearDecker}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={8} md={9} lg={9}>\r\n          <Decker\r\n            ref={exportRef}\r\n            deckList={deckList}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Dialog\r\n        fullScreen\r\n        TransitionComponent={Transition}\r\n        open={open}\r\n        onClose={toogleDialog}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogContent\r\n          align=\"center\"\r\n          className={classes.content}\r\n        >\r\n          {\r\n            (getDeckList.length > 0) ? (\r\n              <>\r\n                <FormControl className={classes.formControl}>\r\n                  <StyledSelect\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={selectCard}\r\n                    onChange={(e) => {\r\n                      setSelectCard(e.target.value);\r\n                    }}\r\n                  >\r\n                    {\r\n                      getDeckList.map((card) => {\r\n                        return (\r\n                          <MenuItem key={`${card.set}-${card.id}`} value={card}>{`${card.name}`}</MenuItem>\r\n                        );\r\n                      })\r\n                    }\r\n                  </StyledSelect>\r\n                </FormControl>\r\n                <div>\r\n                  <IconButton\r\n                    aria-label=\"remove\"\r\n                    size=\"large\"\r\n                    disabled={couldClickRemove}\r\n                    onClick={handleRemove}\r\n                  >\r\n                    {\r\n                      (couldClickRemove) ? (\r\n                        <RemoveCircleIcon fontSize=\"large\" />\r\n                      ) : (\r\n                        <RemoveCircleIcon fontSize=\"large\" style={{ color: red[500] }} />\r\n                      )\r\n                    }\r\n                  </IconButton>\r\n                  <span className={classes.cardCount}>\r\n                    {\r\n                      getUsedCard\r\n                    }\r\n                  </span>\r\n                  <IconButton\r\n                    aria-label=\"add\"\r\n                    size=\"large\"\r\n                    disabled={couldClickAdd}\r\n                    onClick={handleAdd}\r\n                  >\r\n                    {\r\n                      (couldClickAdd) ? (\r\n                        <AddCircleIcon fontSize=\"large\" />\r\n                      ) : (\r\n                        <AddCircleIcon fontSize=\"large\" style={{ color: green[500] }} />\r\n                      )\r\n                    }\r\n                  </IconButton>\r\n                </div>\r\n                <div className={classes.cardContainer}>\r\n                  <div>\r\n                    <IconButton\r\n                      aria-label=\"prev\"\r\n                      size=\"large\"\r\n                      disabled={couldClickPrev}\r\n                      onClick={handlePrevCard}\r\n                    >\r\n                      {\r\n                        (couldClickPrev) ? (\r\n                          <ChevronLeftIcon fontSize=\"large\" />\r\n                        ) : (\r\n                          <ChevronLeftIcon fontSize=\"large\" style={{ color: blueGrey[900] }} />\r\n                        )\r\n                      }\r\n                    </IconButton>\r\n                  </div>\r\n                  <div>\r\n                    {\r\n                      (selectCard !== null) && (\r\n                        <img src={selectCard.imgSrc} width=\"100%\" />\r\n                      )\r\n                    }\r\n                  </div>\r\n                  <div>\r\n                    <IconButton\r\n                      aria-label=\"next\"\r\n                      size=\"large\"\r\n                      disabled={couldClickNext}\r\n                      onClick={handleNextCard}\r\n                    >\r\n                      {\r\n                        (couldClickNext) ? (\r\n                          <ChevronRightIcon fontSize=\"large\" />\r\n                        ) : (\r\n                          <ChevronRightIcon fontSize=\"large\" style={{ color: blueGrey[900] }} />\r\n                        )\r\n                      }\r\n                    </IconButton>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <Typography\r\n                variant=\"h5\"\r\n                color=\"initial\"\r\n                align=\"center\"\r\n                // style={{ height: '50px', color: '#000000' }}\r\n              >\r\n                { `無查詢結果。` }\r\n              </Typography>\r\n            )\r\n          }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={toogleDialog}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            startIcon={<ExpandMoreIcon />}\r\n          >\r\n            關閉\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeckDashBoard;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\n/**\r\n * Copyright\r\n *\r\n */\r\nconst Copyright = () => {\r\n  return (\r\n    <Typography\r\n      variant=\"body2\"\r\n      // color=\"initial\"\r\n      align=\"center\"\r\n      style={{ height: '50px', color: '#000000' }}\r\n    >\r\n      { `${new Date().getFullYear() } © ` }\r\n      { `Aaron Lin All Right Reserved.` }\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default Copyright;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst ScrollTop = (props) => {\r\n  const { children, window } = props;\r\n  const classes = useStyles();\r\n  // Note that you normally won't need to set the window ref as useScrollTrigger\r\n  // will default to window.\r\n  // This is only being set here because the demo is in an iframe.\r\n  const trigger = useScrollTrigger({\r\n    target: window ? window() : undefined,\r\n    disableHysteresis: true,\r\n    threshold: 100,\r\n  });\r\n\r\n  const handleClick = (event) => {\r\n    const anchor = (event.target.ownerDocument || document).querySelector('#back-to-top-anchor');\r\n\r\n    if (anchor) {\r\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Zoom in={trigger}>\r\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\r\n        {children}\r\n      </div>\r\n    </Zoom>\r\n  );\r\n}\r\n\r\nScrollTop.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default ScrollTop;\r\n","import AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport Box from '@material-ui/core/Box';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport DeckDashboard from '../Components/DeckDashboard';\r\nimport Copyright from '../Components/Copyright';\r\nimport ScrollTop from '../Components/ScrollTop';\r\n\r\nimport './App.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst App = (props) => {\r\n  return (\r\n    <div className=\"App\">\r\n      <CssBaseline />\r\n      <AppBar>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\">PTCG 卡表產生器</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Toolbar id=\"back-to-top-anchor\" />\r\n      <Container maxWidth={false}>\r\n        <Box my={2}>\r\n          <DeckDashboard />\r\n        </Box>\r\n      </Container>\r\n      <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      <ScrollTop {...props}>\r\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\r\n          <KeyboardArrowUpIcon />\r\n        </Fab>\r\n      </ScrollTop>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  //   <App />\r\n  // </React.StrictMode>,\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}