{"version":3,"sources":["Config/Sets.js","Config/CardTypes.js","Components/CardSearch/index.js","Components/ToolBar/index.js","Components/Decker/index.js","CardList/ac2a.js","CardList/as6a.js","CardList/as6b.js","CardList/index.js","Components/DeckDashboard/index.js","Components/Copyright/index.js","Components/ScrollTop/index.js","App/App.js","reportWebVitals.js","index.js"],"names":["Sets","AC1A","key","value","text","AC1B","AC2A","AC2B","AS5A","AS5B","AS6A","AS6B","SC1A","SC1B","SC2A","SC2B","S4","S4A","CardTypes","POKEMON","TRAINER","ITEM","ENERGY","useStyles","makeStyles","theme","container","height","boxShadow","formControl","margin","spacing","width","selectEmpty","marginTop","CardSearch","props","classes","handelSearch","queryCondition","handleChangeQuery","clearQuery","set","type","searchText","className","FormControl","InputLabel","id","Select","labelId","onChange","e","target","MenuItem","Object","keys","map","TextField","label","Button","variant","color","onClick","marginBottom","ToolBar","handleClearDecker","startIcon","Alert","elevation","card","pokemonInfo","backgroundColor","trainerInfo","itemInfo","energyInfo","contentText","marginLeft","Decker","deckList","deckInfo","React","useMemo","pokemonCount","trainerCount","itemCount","energyCount","forEach","Grid","item","xs","sm","md","lg","severity","src","imgSrc","length","Typography","align","AC2A_Card_List","name","maxCount","isBan","AS6A_Card_List","AS6B_Card_List","CARD_LIST","cardContainer","display","justifyContent","alignItems","DeckDashBoard","useState","setQueryCondition","selectCard","setSelectCard","open","setOpen","setDeckList","toogleDialog","getDeckList","filter","tmp1","tmp2","tmp3","search","couldClickPrev","couldClickNext","couldClickAdd","couldClickRemove","Dialog","onClose","aria-labelledby","aria-describedby","DialogContent","IconButton","aria-label","size","disabled","handleRemove","console","log","fontSize","style","red","green","selectCardIndex","some","tmp","index","DialogActions","Copyright","Date","getFullYear","root","position","bottom","right","ScrollTop","children","window","trigger","useScrollTrigger","undefined","disableHysteresis","threshold","Zoom","in","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","App","CssBaseline","AppBar","Toolbar","Container","maxWidth","Box","my","DeckDashboard","mt","Fab","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8e37b0f8.chunk.js","sourcesContent":["/**\r\n * Sets\r\n *\r\n */\r\nconst Sets = {\r\n  AC1A: {\r\n    key: 'ac1a',\r\n    value: 'ac1a',\r\n    text: '眾星雲集組合篇 A',\r\n  },\r\n  AC1B: {\r\n    key: 'ac1b',\r\n    value: 'ac1b',\r\n    text: '眾星雲集組合篇 B',\r\n  },\r\n  AC2A: {\r\n    key: 'ac2a',\r\n    value: 'ac2a',\r\n    text: '美夢成真組合篇 A',\r\n  },\r\n  AC2B: {\r\n    key: 'ac2b',\r\n    value: 'ac2b',\r\n    text: '美夢成真組合篇 B',\r\n  },\r\n  AS5A: {\r\n    key: 'as5a',\r\n    value: 'as5a',\r\n    text: '雙倍爆擊 A',\r\n  },\r\n  AS5B: {\r\n    key: 'as5b',\r\n    value: 'as5b',\r\n    text: '雙倍爆擊 B',\r\n  },\r\n  AS6A: {\r\n    key: 'as6a',\r\n    value: 'as6a',\r\n    text: '傳說交鋒 A',\r\n  },\r\n  AS6B: {\r\n    key: 'as6b',\r\n    value: 'as6b',\r\n    text: '傳說交鋒 B',\r\n  },\r\n  SC1A: {\r\n    key: 'sc1a',\r\n    value: 'sc1a',\r\n    text: '劍&盾 A',\r\n  },\r\n  SC1B: {\r\n    key: 'sc1b',\r\n    value: 'sc1b',\r\n    text: '劍&盾 B',\r\n  },\r\n  SC2A: {\r\n    key: 'sc2a',\r\n    value: 'sc2a',\r\n    text: '無極力量 A',\r\n  },\r\n  SC2B: {\r\n    key: 'sc2b',\r\n    value: 'sc2b',\r\n    text: '無極力量 B',\r\n  },\r\n  S4: {\r\n    key: 's4',\r\n    value: 's4',\r\n    text: '驚天伏特攻擊',\r\n  },\r\n  S4A: {\r\n    key: 's4a',\r\n    value: 's4a',\r\n    text: '閃色明星V',\r\n  },\r\n};\r\n\r\nexport default Sets;\r\n","const CardTypes = {\r\n  POKEMON: {\r\n    key: 'pokemon',\r\n    value: 'pokemon',\r\n    text: '寶可夢',\r\n  },\r\n  TRAINER: {\r\n    key: 'trainer',\r\n    value: 'trainer',\r\n    text: '訓練家',\r\n  },\r\n  ITEM: {\r\n    key: 'item',\r\n    value: 'item',\r\n    text: '物品',\r\n  },\r\n  ENERGY: {\r\n    key: 'energy',\r\n    value: 'energy',\r\n    text: '能量',\r\n  },\r\n};\r\n\r\nexport default CardTypes;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {\r\n  Sets,\r\n  CardTypes,\r\n} from '../../Config';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    height: '300px',\r\n    boxShadow: 'rgba(17, 17, 26, 0.05) 0px 1px 0px, rgba(17, 17, 26, 0.1) 0px 0px 8px',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: '95%',\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst CardSearch = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    handelSearch, // 查詢\r\n    queryCondition, // 搜尋條件\r\n    handleChangeQuery, // 修改條件\r\n    clearQuery, // 清空查詢條件\r\n  } = props;\r\n\r\n  const {\r\n    set, // 彈數\r\n    type, // 種類\r\n    searchText, // 關鍵字\r\n  } = queryCondition;\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">彈數</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={set}\r\n          onChange={(e) => {\r\n            handleChangeQuery('set', e.target.value);\r\n          }}\r\n        >\r\n          <MenuItem value=\"\">全部</MenuItem>\r\n          {\r\n            Object.keys(Sets).map((set) => {\r\n              return (\r\n                <MenuItem key={Sets[set].key} value={Sets[set].value}>{`${Sets[set].key} - ${Sets[set].text}`}</MenuItem>\r\n              );\r\n            })\r\n          }\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">種類</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={type}\r\n          onChange={(e) => {\r\n            handleChangeQuery('type', e.target.value);\r\n          }}\r\n        >\r\n          <MenuItem value=\"\">全部</MenuItem>\r\n          {\r\n            Object.keys(CardTypes).map((type) => {\r\n              return (\r\n                <MenuItem key={CardTypes[type].key} value={CardTypes[type].value}>{CardTypes[type].text}</MenuItem>\r\n              );\r\n            })\r\n          }\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"關鍵字\"\r\n          value={searchText}\r\n          onChange={(e) => {\r\n            handleChangeQuery('searchText', e.target.value);\r\n          }}\r\n        />\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handelSearch}>\r\n          查詢\r\n        </Button>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={clearQuery}>\r\n          清除條件\r\n        </Button>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardSearch;","import {\r\n  makeStyles,\r\n  withStyles,\r\n} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\n/**\r\n * useStyles\r\n *\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    marginTop: '10px',\r\n    marginBottom: '10px',\r\n    height: '160px',\r\n    boxShadow: 'rgba(17, 17, 26, 0.05) 0px 1px 0px, rgba(17, 17, 26, 0.1) 0px 0px 8px',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: '95%',\r\n  },\r\n}));\r\n\r\n/**\r\n * ToolBar\r\n *\r\n */\r\nconst ToolBar = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    handleClearDecker\r\n  } = props;\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <FormControl className={classes.formControl}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"default\"\r\n          startIcon={<DeleteIcon />}\r\n          onClick={handleClearDecker}\r\n        >\r\n          清空卡表\r\n        </Button>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"default\"\r\n          startIcon={<ShareIcon />}\r\n        >\r\n          分享連結\r\n        </Button>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"default\"\r\n          startIcon={<GetAppIcon />}\r\n        >\r\n          下載卡表\r\n        </Button>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToolBar;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport {\r\n  CardTypes,\r\n} from '../../Config';\r\n\r\nconst Alert = (props) => {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    // height: '100%',\r\n    // minHeight: '300px',\r\n    // display: 'flex',\r\n    // boxShadow: 'rgba(17, 17, 26, 0.05) 0px 1px 0px, rgba(17, 17, 26, 0.1) 0px 0px 8px',\r\n  },\r\n  card: {\r\n    // width: '100%',\r\n    // height: '200px',\r\n    boxShadow: 'rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px',\r\n  },\r\n  pokemonInfo: {\r\n    backgroundColor: '#f44336',\r\n  },\r\n  trainerInfo: {\r\n    backgroundColor: '#ff9800',\r\n  },\r\n  itemInfo: {\r\n    backgroundColor: '#2196f3',\r\n  },\r\n  energyInfo: {\r\n    backgroundColor: '#4caf50',\r\n  },\r\n  contentText: {\r\n    marginTop: '20px',\r\n    marginLeft: '10px',\r\n  },\r\n}));\r\n\r\n/**\r\n * Decker\r\n *\r\n * @param {*} props\r\n */\r\nconst Decker = (props) => {\r\n  const classes = useStyles();\r\n  const { deckList } = props;\r\n\r\n  /**\r\n   * deckInfo\r\n   * 牌組資訊\r\n   *\r\n   */\r\n  const deckInfo = React.useMemo(() => {\r\n    let pokemonCount = 0;\r\n    let trainerCount = 0;\r\n    let itemCount = 0;\r\n    let energyCount = 0;\r\n\r\n    deckList.forEach(card => {\r\n      switch (card.type) {\r\n        case CardTypes.POKEMON.value:\r\n          pokemonCount += 1;\r\n          break;\r\n        case CardTypes.TRAINER.value:\r\n          trainerCount += 1;\r\n          break;\r\n        case CardTypes.ITEM.value:\r\n          itemCount += 1;\r\n          break;\r\n        case CardTypes.ENERGY.value:\r\n          energyCount += 1;\r\n          break;\r\n        default:\r\n      }\r\n    });\r\n\r\n    return {\r\n      pokemonCount,\r\n      trainerCount,\r\n      itemCount,\r\n      energyCount,\r\n    };\r\n  }, [deckList]);\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6} sm={6} md={3} lg={3}><Alert severity=\"info\" className={classes.pokemonInfo}>{`寶可夢: ${deckInfo.pokemonCount}`}</Alert></Grid>\r\n        <Grid item xs={6} sm={6} md={3} lg={3}><Alert severity=\"info\" className={classes.trainerInfo}>{`訓練家: ${deckInfo.trainerCount}`}</Alert></Grid>\r\n        <Grid item xs={6} sm={6} md={3} lg={3}><Alert severity=\"info\" className={classes.itemInfo}>{`物品: ${deckInfo.itemCount}`}</Alert></Grid>\r\n        <Grid item xs={6} sm={6} md={3} lg={3}><Alert severity=\"info\" className={classes.energyInfo}>{`能量: ${deckInfo.energyCount}`}</Alert></Grid>\r\n      </Grid>\r\n      <Grid container spacing={3}>\r\n        {\r\n          deckList.map((card) => {\r\n            return (\r\n              <Grid item xs={6} sm={4} md={3} lg={2}>\r\n                <div className={classes.card}>\r\n                  <img src={card.imgSrc} width=\"100%\" />\r\n                </div>\r\n              </Grid>\r\n            );\r\n          })\r\n        }\r\n        {\r\n          (deckList.length === 0) && (\r\n            <>\r\n              <Typography\r\n                variant=\"h5\"\r\n                color=\"secondary\"\r\n                align=\"center\"\r\n                // style={{ height: '50px', color: '#000000' }}\r\n                className={classes.contentText}\r\n              >\r\n                { `目前牌組沒有卡片。` }\r\n              </Typography>\r\n            </>\r\n          )\r\n        }\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Decker;","import {\r\n  CardTypes,\r\n  Sets,\r\n} from '../Config';\r\n\r\nconst set = Sets.AC2A.value;\r\n\r\n/**\r\n * AC2A_Card_List\r\n * 美夢成真組合篇 A\r\n *\r\n */\r\nconst AC2A_Card_List = [\r\n  {\r\n    id: 57,\r\n    name: '亞克諾姆',\r\n    set,\r\n    type: CardTypes.POKEMON.value,\r\n    maxCount: 4,\r\n    isBan: false,\r\n    imgSrc: 'https://ptcgcard.com/img/057.5aae84da.jpg',\r\n  },\r\n];\r\n\r\nexport default AC2A_Card_List;\r\n","import {\r\n  CardTypes,\r\n  Sets,\r\n} from '../Config';\r\n\r\nconst set = Sets.AS6A.value;\r\n\r\n/**\r\n * AS6A_Card_List\r\n * 傳說交鋒 A\r\n *\r\n */\r\nconst AS6A_Card_List = [\r\n  {\r\n    id: 167,\r\n    name: '貴重球',\r\n    set,\r\n    type: CardTypes.ITEM.value,\r\n    maxCount: 4,\r\n    isBan: false,\r\n    imgSrc: 'https://ptcgcard.com/img/167.e09bac49.jpg',\r\n  },\r\n  {\r\n    id: 190,\r\n    name: '貴重球',\r\n    set,\r\n    type: CardTypes.ITEM.value,\r\n    maxCount: 4,\r\n    isBan: false,\r\n    imgSrc: 'https://ptcgcard.com/img/190.4630a317.jpg',\r\n  },\r\n];\r\n\r\nexport default AS6A_Card_List;\r\n","import {\r\n  CardTypes,\r\n  Sets,\r\n} from '../Config';\r\n\r\nconst set = Sets.AS6B.value;\r\n\r\n/**\r\n * AS6B_Card_List\r\n * 傳說交鋒 B\r\n *\r\n */\r\nconst AS6B_Card_List = [\r\n  {\r\n    id: 174,\r\n    name: 'N的覺悟',\r\n    set,\r\n    type: CardTypes.TRAINER.value,\r\n    maxCount: 4,\r\n    isBan: false,\r\n    imgSrc: 'https://ptcgcard.com/img/174.ce30c82b.jpg',\r\n  },\r\n  {\r\n    id: 222,\r\n    name: 'N的覺悟',\r\n    set,\r\n    type: CardTypes.TRAINER.value,\r\n    maxCount: 4,\r\n    isBan: false,\r\n    imgSrc: 'https://ptcgcard.com/img/222.e943d711.jpg',\r\n  },\r\n];\r\n\r\nexport default AS6B_Card_List;\r\n","import AC2A_Card_List from './ac2a';\r\nimport AS6A_Card_List from './as6a';\r\nimport AS6B_Card_List from './as6b';\r\n\r\nconst CARD_LIST = [\r\n  ...AC2A_Card_List,\r\n  ...AS6A_Card_List,\r\n  ...AS6B_Card_List,\r\n];\r\n\r\nexport default CARD_LIST;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n// import DialogContentText from '@material-ui/core/DialogContentText';\r\n// import DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport { green, red } from '@material-ui/core/colors';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nimport CardSearch from '../CardSearch';\r\nimport ToolBar from '../ToolBar';\r\nimport Decker from '../Decker';\r\n\r\nimport CARD_LIST from '../../CardList';\r\n\r\n/**\r\n * useStyles\r\n *\r\n */\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: '95%',\r\n  },\r\n  cardContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\n/**\r\n * DeckDashBoard\r\n *\r\n */\r\nconst DeckDashBoard = () => {\r\n  const classes = useStyles();\r\n\r\n  // 查詢條件\r\n  const [queryCondition, setQueryCondition] = React.useState({\r\n    set: '', // 彈數\r\n    type: '', // 種類\r\n    searchText: '', // 關鍵字\r\n  });\r\n\r\n  const [selectCard, setSelectCard] = React.useState(null);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [deckList, setDeckList] = React.useState([]);\r\n\r\n  /**\r\n   * toogleDialog\r\n   *\r\n   */\r\n  const toogleDialog = () => {\r\n    // 如果關閉 Dialog，要清空選擇的卡片\r\n    if (open) {\r\n      setSelectCard(null);\r\n    }\r\n    setOpen(!open);\r\n  };\r\n\r\n  /**\r\n   * handleChangeQuery\r\n   * 更新查詢條件\r\n   *\r\n   * @param {*} key\r\n   * @param {*} value\r\n   */\r\n  const handleChangeQuery = (key, value) => {\r\n    setQueryCondition({\r\n      ...queryCondition,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * clearQuery\r\n   * 清空所有查詢條件\r\n   *\r\n   */\r\n  const clearQuery = () => {\r\n    setQueryCondition({\r\n      set: '', // 彈數\r\n      type: '', // 種類\r\n      searchText: '', // 關鍵字\r\n    });\r\n  };\r\n\r\n  /**\r\n   * getDeckList\r\n   * 根據搜尋條件 filter 卡片\r\n   *\r\n   */\r\n  const getDeckList = React.useMemo(() => {\r\n    return CARD_LIST.filter((tmp1) => {\r\n      // 過濾彈數\r\n      if (queryCondition.set === '') {\r\n        return true;\r\n      } else {\r\n        return tmp1.set === queryCondition.set;\r\n      }\r\n    }).filter((tmp2) => {\r\n      // 過濾卡片 type\r\n      if (queryCondition.type === '') {\r\n        return true;\r\n      } else {\r\n        return tmp2.type === queryCondition.type;\r\n      }\r\n    }).filter((tmp3) => {\r\n      // 過濾關鍵字\r\n      return tmp3.name.search(queryCondition.searchText) !== -1;\r\n    });\r\n  }, [queryCondition]);\r\n\r\n  /**\r\n   * handelSearch\r\n   * 查詢\r\n   *\r\n   */\r\n  const handelSearch = () => {\r\n    // 打開 Dialog 預設帶第一張卡片\r\n    if (selectCard === null) {\r\n      if (getDeckList.length > 0) {\r\n        setSelectCard(getDeckList[0]);\r\n      }\r\n    }\r\n    toogleDialog();\r\n  };\r\n\r\n  /**\r\n   * couldClickPrev\r\n   * 是否可以點選前一張\r\n   *\r\n   */\r\n  const couldClickPrev = React.useMemo(() => {\r\n    if (selectCard === null || getDeckList.length === 0) {\r\n      return true;\r\n    } else if (selectCard.set === getDeckList[0].set && selectCard.id === getDeckList[0].id) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }, [selectCard, getDeckList]);\r\n\r\n  /**\r\n   * couldClickNext\r\n   * 是否可以點選後一張\r\n   *\r\n   */\r\n  const couldClickNext = React.useMemo(() => {\r\n    if (selectCard === null || getDeckList.length === 0) {\r\n      return true;\r\n    } else if (selectCard.set === getDeckList[getDeckList.length -1].set && selectCard.id === getDeckList[getDeckList.length -1].id) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }, [selectCard, getDeckList]);\r\n\r\n  /**\r\n   * handlePrevCard\r\n   * 往前一張卡片\r\n   *\r\n   */\r\n  const handlePrevCard = () => {\r\n    // 取得目前是第幾張\r\n    let selectCardIndex = 0;\r\n    getDeckList.some((tmp, index) => {\r\n      if (tmp.id === selectCard.id && tmp.set === selectCard.set) {\r\n        selectCardIndex = index;\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n\r\n    if (selectCardIndex > 0) {\r\n      setSelectCard(getDeckList[selectCardIndex - 1]);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * handleNextCard\r\n   * 往後一張卡片\r\n   *\r\n   */\r\n  const handleNextCard = () => {\r\n    // 取得目前是第幾張\r\n    let selectCardIndex = 0;\r\n    getDeckList.some((tmp, index) => {\r\n      if (tmp.id === selectCard.id && tmp.set === selectCard.set) {\r\n        selectCardIndex = index;\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n\r\n    if (selectCardIndex !== getDeckList.length - 1) {\r\n      setSelectCard(getDeckList[selectCardIndex + 1]);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * handleAdd\r\n   * 加入卡片\r\n   *\r\n   */\r\n  const handleAdd = () => {\r\n    setDeckList([\r\n      ...deckList,\r\n      selectCard,\r\n    ]);\r\n  };\r\n\r\n  /**\r\n   * handleRemove\r\n   * 移除卡片\r\n   *\r\n   */\r\n  const handleRemove = () => {\r\n    console.log('handleRemove', handleRemove);\r\n  };\r\n\r\n  /**\r\n   * couldClickAdd\r\n   * 是否可以點選加入\r\n   *\r\n   */\r\n  const couldClickAdd = React.useMemo(() => {\r\n    // 牌組只能 60 張\r\n    if (deckList.length === 60) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }, [deckList]);\r\n\r\n  /**\r\n   * couldClickRemove\r\n   * 是否可以點選移除\r\n   *\r\n   */\r\n  const couldClickRemove = React.useMemo(() => {\r\n    return false;\r\n  }, [deckList]);\r\n\r\n  /**\r\n   * handleClearDecker\r\n   * 清空卡表\r\n   *\r\n   */\r\n  const handleClearDecker = () => {\r\n    setDeckList([]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={4} md={3} lg={3}>\r\n          <CardSearch\r\n            handelSearch={handelSearch}\r\n            queryCondition={queryCondition}\r\n            handleChangeQuery={handleChangeQuery}\r\n            clearQuery={clearQuery}\r\n          />\r\n          <ToolBar\r\n            handleClearDecker={handleClearDecker}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={8} md={9} lg={9}>\r\n          <Decker\r\n            deckList={deckList}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={toogleDialog}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        {/* <DialogTitle id=\"alert-dialog-title\">查詢結果</DialogTitle> */}\r\n        <DialogContent align=\"center\">\r\n          {\r\n            (getDeckList.length > 0) ? (\r\n              <>\r\n                <FormControl className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={selectCard}\r\n                    onChange={(e) => {\r\n                      setSelectCard(e.target.value);\r\n                    }}\r\n                  >\r\n                    {\r\n                      getDeckList.map((card) => {\r\n                        return (\r\n                          <MenuItem key={`${card.set}-${card.id}`} value={card}>{`${card.name}`}</MenuItem>\r\n                        );\r\n                      })\r\n                    }\r\n                  </Select>\r\n                </FormControl>\r\n                <div>\r\n                  <IconButton\r\n                    aria-label=\"remove\"\r\n                    size=\"large\"\r\n                    disabled={couldClickRemove}\r\n                    onClick={handleRemove}\r\n                  >\r\n                    <RemoveCircleIcon fontSize=\"large\" style={{ color: red[500] }}/>\r\n                  </IconButton>\r\n                  <IconButton\r\n                    aria-label=\"add\"\r\n                    size=\"large\"\r\n                    disabled={couldClickAdd}\r\n                    onClick={handleAdd}\r\n                  >\r\n                    <AddCircleIcon fontSize=\"large\" style={{ color: green[500] }} />\r\n                  </IconButton>\r\n                </div>\r\n                <div className={classes.cardContainer}>\r\n                  <div>\r\n                    <IconButton\r\n                      aria-label=\"prev\"\r\n                      size=\"large\"\r\n                      disabled={couldClickPrev}\r\n                      onClick={handlePrevCard}\r\n                    >\r\n                      <ChevronLeftIcon fontSize=\"large\" />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div>\r\n                    {\r\n                      (selectCard !== null) && (\r\n                        <img src={selectCard.imgSrc} width=\"70%\" />\r\n                      )\r\n                    }\r\n                  </div>\r\n                  <div>\r\n                    <IconButton\r\n                      aria-label=\"next\"\r\n                      size=\"large\"\r\n                      disabled={couldClickNext}\r\n                      onClick={handleNextCard}\r\n                    >\r\n                      <ChevronRightIcon fontSize=\"large\" />\r\n                    </IconButton>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <Typography\r\n                variant=\"h5\"\r\n                color=\"initial\"\r\n                align=\"center\"\r\n                // style={{ height: '50px', color: '#000000' }}\r\n              >\r\n                { `無查詢結果。` }\r\n              </Typography>\r\n            )\r\n          }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={toogleDialog} color=\"primary\">\r\n            關閉\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeckDashBoard;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\n/**\r\n * Copyright\r\n *\r\n */\r\nconst Copyright = () => {\r\n  return (\r\n    <Typography\r\n      variant=\"body2\"\r\n      // color=\"initial\"\r\n      align=\"center\"\r\n      style={{ height: '50px', color: '#000000' }}\r\n    >\r\n      { `${new Date().getFullYear() } © ` }\r\n      { `Aaron Lin All Right Reserved.` }\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default Copyright;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst ScrollTop = (props) => {\r\n  const { children, window } = props;\r\n  const classes = useStyles();\r\n  // Note that you normally won't need to set the window ref as useScrollTrigger\r\n  // will default to window.\r\n  // This is only being set here because the demo is in an iframe.\r\n  const trigger = useScrollTrigger({\r\n    target: window ? window() : undefined,\r\n    disableHysteresis: true,\r\n    threshold: 100,\r\n  });\r\n\r\n  const handleClick = (event) => {\r\n    const anchor = (event.target.ownerDocument || document).querySelector('#back-to-top-anchor');\r\n\r\n    if (anchor) {\r\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Zoom in={trigger}>\r\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\r\n        {children}\r\n      </div>\r\n    </Zoom>\r\n  );\r\n}\r\n\r\nScrollTop.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default ScrollTop;\r\n","import AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport Box from '@material-ui/core/Box';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport DeckDashboard from '../Components/DeckDashboard';\r\nimport Copyright from '../Components/Copyright';\r\nimport ScrollTop from '../Components/ScrollTop';\r\n\r\nimport './App.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst App = (props) => {\r\n  return (\r\n    <div className=\"App\">\r\n      <CssBaseline />\r\n      <AppBar>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\">PTCG 卡表產生器</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Toolbar id=\"back-to-top-anchor\" />\r\n      <Container maxWidth={false}>\r\n        <Box my={2}>\r\n          <DeckDashboard />\r\n        </Box>\r\n      </Container>\r\n      <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      <ScrollTop {...props}>\r\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\r\n          <KeyboardArrowUpIcon />\r\n        </Fab>\r\n      </ScrollTop>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  //   <App />\r\n  // </React.StrictMode>,\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}