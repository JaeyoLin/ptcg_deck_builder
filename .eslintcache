[{"D:\\sourcecode\\aaron\\ptcg_deck_builder\\src\\index.js":"1","D:\\sourcecode\\aaron\\ptcg_deck_builder\\src\\Components\\ScrollTop\\index.js":"2","D:\\sourcecode\\aaron\\ptcg_deck_builder\\src\\Components\\CardSearch\\index.js":"3","D:\\sourcecode\\aaron\\ptcg_deck_builder\\src\\Components\\Decker\\index.js":"4","D:\\sourcecode\\aaron\\ptcg_deck_builder\\src\\App\\App.js":"5","D:\\sourcecode\\aaron\\ptcg_deck_builder\\src\\Components\\Copyright\\index.js":"6","D:\\sourcecode\\aaron\\ptcg_deck_builder\\src\\Components\\DeckDashboard\\index.js":"7","D:\\sourcecode\\aaron\\ptcg_deck_builder\\src\\reportWebVitals.js":"8","D:\\sourcecode\\aaron\\ptcg_deck_builder\\src\\Config\\Sets.js":"9","D:\\sourcecode\\aaron\\ptcg_deck_builder\\src\\Config\\CardTypes.js":"10","D:\\sourcecode\\aaron\\ptcg_deck_builder\\src\\Config\\index.js":"11"},{"size":504,"mtime":1606195714546,"results":"12","hashOfConfig":"13"},{"size":1472,"mtime":1606188267541,"results":"14","hashOfConfig":"13"},{"size":2499,"mtime":1606202084564,"results":"15","hashOfConfig":"13"},{"size":1097,"mtime":1606205546679,"results":"16","hashOfConfig":"13"},{"size":1434,"mtime":1606197953569,"results":"17","hashOfConfig":"13"},{"size":486,"mtime":1606187097031,"results":"18","hashOfConfig":"13"},{"size":3208,"mtime":1606206556389,"results":"19","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"13"},{"size":271,"mtime":1606200797855,"results":"21","hashOfConfig":"13"},{"size":325,"mtime":1606200888299,"results":"22","hashOfConfig":"13"},{"size":102,"mtime":1606200688028,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"8ikimw",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\sourcecode\\aaron\\ptcg_deck_builder\\src\\index.js",[],["53","54"],"D:\\sourcecode\\aaron\\ptcg_deck_builder\\src\\Components\\ScrollTop\\index.js",[],"D:\\sourcecode\\aaron\\ptcg_deck_builder\\src\\Components\\CardSearch\\index.js",[],"D:\\sourcecode\\aaron\\ptcg_deck_builder\\src\\Components\\Decker\\index.js",["55"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    // height: '100%',\r\n    // minHeight: '300px',\r\n    // display: 'flex',\r\n    // boxShadow: 'rgba(17, 17, 26, 0.05) 0px 1px 0px, rgba(17, 17, 26, 0.1) 0px 0px 8px',\r\n  },\r\n  card: {\r\n    // width: '100%',\r\n    // height: '200px',\r\n    boxShadow: 'rgba(0, 0, 0, 0.02) 0px 1px 3px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px',\r\n  },\r\n}));\r\n\r\nconst Decker = (props) => {\r\n  const classes = useStyles();\r\n  const { deckList } = props;\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Grid container spacing={3}>\r\n        {\r\n          deckList.map((card) => {\r\n            return (\r\n              <Grid item xs={6} sm={4} md={3} lg={2}>\r\n                <div className={classes.card}>\r\n                  <img src=\"https://ptcgcard.com/img/173.cb2d1b04.jpg\" width=\"100%\" />\r\n                </div>\r\n              </Grid>\r\n            );\r\n          })\r\n        }\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Decker;","D:\\sourcecode\\aaron\\ptcg_deck_builder\\src\\App\\App.js",["56"],"import AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport Box from '@material-ui/core/Box';\nimport Fab from '@material-ui/core/Fab';\n\nimport DeckDashboard from '../Components/DeckDashboard';\nimport Copyright from '../Components/Copyright';\nimport ScrollTop from '../Components/ScrollTop';\n\nimport './App.css';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst App = (props) => {\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n      <AppBar>\n        <Toolbar>\n          <Typography variant=\"h6\">Aaron Test</Typography>\n        </Toolbar>\n      </AppBar>\n      <Toolbar id=\"back-to-top-anchor\" />\n      <Container maxWidth={false}>\n        <Box my={2}>\n          <DeckDashboard />\n        </Box>\n      </Container>\n      <Box mt={8}>\n          <Copyright />\n        </Box>\n      <ScrollTop {...props}>\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </ScrollTop>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\sourcecode\\aaron\\ptcg_deck_builder\\src\\Components\\Copyright\\index.js",["57"],"import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\n/**\r\n * Copyright\r\n *\r\n */\r\nconst Copyright = () => {\r\n  return (\r\n    <Typography\r\n      variant=\"body2\"\r\n      // color=\"initial\"\r\n      align=\"center\"\r\n      style={{ height: '50px', color: '#000000' }}\r\n    >\r\n      { `${new Date().getFullYear() } © ` }\r\n      { `Aaron All Right Reserved.` }\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default Copyright;\r\n",["58","59"],"D:\\sourcecode\\aaron\\ptcg_deck_builder\\src\\Components\\DeckDashboard\\index.js",["60","61","62","63"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport { green, red } from '@material-ui/core/colors';\r\n\r\nimport CardSearch from '../CardSearch';\r\nimport Decker from '../Decker';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: '95%',\r\n  },\r\n}));\r\n\r\nconst DeckDashBoard = () => {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [deckList, setDeckList] = React.useState([\r\n    1, 2, 3, 4, 5, 6, 7, 8, 9 , 10,\r\n  ]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={4} md={3} lg={3}>\r\n          <CardSearch\r\n            openDialog={handleClickOpen}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={8} md={9} lg={9}>\r\n          <Decker\r\n            deckList={deckList}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        {/* <DialogTitle id=\"alert-dialog-title\">查詢結果</DialogTitle> */}\r\n        <DialogContent align=\"center\">\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value=\"1\"\r\n              // onChange={handleChange}\r\n            >\r\n              <MenuItem value=\"1\">噴火龍</MenuItem>\r\n              <MenuItem value=\"2\">水劍龜</MenuItem>\r\n              <MenuItem value=\"3\">妙娃花</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <div>\r\n            <RemoveCircleIcon fontSize=\"large\" style={{ color: red[500] }}/>\r\n            <AddCircleIcon fontSize=\"large\" style={{ color: green[500] }} />\r\n          </div>\r\n          <ChevronLeftIcon fontSize=\"large\" />\r\n          <img src=\"https://ptcgcard.com/img/173.cb2d1b04.jpg\" width=\"70%\" />\r\n          <ChevronRightIcon fontSize=\"large\" />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            關閉\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeckDashBoard;\r\n",["64","65"],"D:\\sourcecode\\aaron\\ptcg_deck_builder\\src\\reportWebVitals.js",[],"D:\\sourcecode\\aaron\\ptcg_deck_builder\\src\\Config\\Sets.js",[],"D:\\sourcecode\\aaron\\ptcg_deck_builder\\src\\Config\\CardTypes.js",[],"D:\\sourcecode\\aaron\\ptcg_deck_builder\\src\\Config\\index.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":30,"column":19,"nodeType":"72","endLine":30,"endColumn":87},{"ruleId":"73","severity":1,"message":"74","line":17,"column":7,"nodeType":"75","messageId":"76","endLine":17,"endColumn":16},{"ruleId":"73","severity":1,"message":"77","line":3,"column":8,"nodeType":"75","messageId":"76","endLine":3,"endColumn":12},{"ruleId":"66","replacedBy":"78"},{"ruleId":"68","replacedBy":"79"},{"ruleId":"73","severity":1,"message":"80","line":8,"column":8,"nodeType":"75","messageId":"76","endLine":8,"endColumn":25},{"ruleId":"73","severity":1,"message":"81","line":9,"column":8,"nodeType":"75","messageId":"76","endLine":9,"endColumn":19},{"ruleId":"73","severity":1,"message":"82","line":33,"column":20,"nodeType":"75","messageId":"76","endLine":33,"endColumn":31},{"ruleId":"70","severity":1,"message":"71","line":85,"column":11,"nodeType":"72","endLine":85,"endColumn":78},{"ruleId":"66","replacedBy":"83"},{"ruleId":"68","replacedBy":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useStyles' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.",["85"],["86"],"'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'setDeckList' is assigned a value but never used.",["85"],["86"],"no-global-assign","no-unsafe-negation"]